/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_se.h"
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SWERTY 1
#define LOWER 2
#define RAISE 3
#define MISC 4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <MISC>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB        &kp SE_Q      &kp SE_W      &kp SE_E      &kp SE_R      &kp SE_T          &kp SE_Y        &kp SE_U         &kp SE_I          &kp SE_O        &kp SE_P         &kp BSPC
   &kp LCTRL      &kp SE_A      &kp SE_S      &kp SE_D      &kp SE_F      &kp SE_G          &kp SE_H        &kp SE_J         &kp SE_K          &kp SE_L        &kp SE_SEMI      &kp SE_SQT
   &sk LSHFT      &kp SE_Z      &kp SE_X      &kp SE_C      &kp SE_V      &kp SE_B          &kp SE_N        &kp SE_M         &kp SE_COMMA      &kp SE_DOT      &kp SE_FSLH      &kp ESC
                                              &kp LGUI      &mo LOWER     &kp BSPC          &kp SPACE       &mo RAISE        &kp RALT


                        >;
                };
                swerty_layer {
                        bindings = <
   &trabs         &trans        &trans        &trans        &trans        &trans            &trans          &trans           &trans            &trans          &trans           &kp SE_A_RING
   &trans         &trans        &trans        &trans        &trans        &trans            &trans          &trans           &trans            &trans          &kp SE_O_UMLAUT  &kp SE_A_UMLAUT
   &trans         &trans        &trans        &trans        &trans        &trans            &trans          &trans           &trans            &trans          &trans           &trans  
                                              &trans        &trans        &trans            &trans          &trans           &trans 


                        >;
                };
                lower_layer {
                        bindings = <
   &trans       &kp DELETE      &kp SE_N7     &kp SE_N8     &kp SE_N9     &kp KP_MULTIPLY   &trans          &trans          &trans             &trans         &trans         &trans
   &trans       &kp SE_EQUAL    &kp SE_N4     &kp SE_N5     &kp SE_N6     &kp SE_MINUS      &kp LEFT        &kp DOWN        &kp UP             &kp RIGHT      &trans         &trans
   &sk LSHFT    &kp SE_FSLH     &kp SE_N1     &kp SE_N2     &kp SE_N3     &kp SE_PLUS       &trans          &trans          &trans             &trans         &trans         &trans
                          	              &kp SE_N0     &trans        &kp SPACE         &kp RET         &trans          &trans
                        >;
                };

                raise_layer {
                        bindings = <
   &kp TAB      &kp SE_EXCL    &kp SE_AT    &kp SE_HASH    &kp SE_DLLR    &kp SE_PRCNT      &kp SE_CARET    &kp SE_AMPS     &kp KP_MULTIPLY    &kp SE_LPAR    &kp SE_RPAR    &kp BSPC
   &kp LCTRL    &trans         &trans       &trans         &trans         &trans            &kp SE_MINUS    &kp SE_EQUAL    &kp SE_LBKT        &kp SE_RBKT    &kp SE_BSLH    &kp SE_GRAVE
   &sk LSHFT    &trans         &trans       &trans         &trans         &trans            &kp SE_UNDER    &kp SE_PLUS     &kp SE_LBRC        &kp SE_RBRC    &kp SE_PIPE    &kp SE_TILDE
                    	                    &kp LGUI       &trans         &kp TAB           &kp RET         &trans          &kp RALT
                        >;
                };
                misc_layer {
                        bindings = <
   &trans       &trans         &trans         &trans        &trans        &trans            &kp SE_CARET    &kp SE_AMPS     &kp KP_MULTIPLY    &kp SE_LPAR    &kp SE_RPAR    &kp BSPC
   &trans       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp SE_MINUS    &kp C_VOL_UP    &kp SE_LBKT        &kp SE_RBKT    &kp SE_BSLH    &kp SE_GRAVE
   &sk LSHFT    &bt BT_CLR     &trans         &trans        &trans        &trans            &kp SE_UNDER    &kp SE_PLUS     &kp SE_LBRC        &kp SE_RBRC    &kp SE_PIPE    &kp SE_TILDE
                    	                    &kp LGUI       &trans         &kp SPACE         &kp RET         &trans          &kp RALT
                        >;
                };
        };
};
