/*&bt BT_SEL 1
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_se.h"
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define MISC 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <MISC>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp ESC        &kp SE_Q      &kp SE_W      &kp SE_E      &kp SE_R      &kp SE_T          &kp SE_Y        &kp SE_U         &kp SE_I          &kp SE_O        &kp SE_P         &kp SE_A_RING 
   &sk LSHFT      &kp SE_A      &kp SE_S      &kp SE_D      &kp SE_F      &kp SE_G          &kp SE_H        &kp SE_J         &kp SE_K          &kp SE_L        &kp SE_O_UMLAUT  &kp SE_A_UMLAUT 
   &sk LCTRL      &kp SE_Z      &kp SE_X      &kp SE_C      &kp SE_V      &kp SE_B          &kp SE_N        &kp SE_M         &kp SE_COMMA      &kp SE_DOT      &kp SE_MINUS     &kp SE_TILDE
                                              &kp LGUI      &mo RAISE     &kp BSPC          &kp SPACE       &mo LOWER        &kp RALT


                        >;
                };

                lower_layer {
                        bindings = <
   &trans       &trans          &trans        &trans        &trans        &trans            &kp DELETE      &kp SE_N7        &kp SE_N8        &kp SE_N9        &kp KP_MULTIPLY   &trans
   &trans       &trans          &trans        &trans        &trans        &trans            &kp SE_EQUAL    &kp SE_N4        &kp SE_N5        &kp SE_N6        &kp SE_MINUS      &trans
   &trans       &trans          &trans        &trans        &trans        &trans            &kp SE_FSLH     &kp SE_N1        &kp SE_N2        &kp SE_N3        &kp SE_PLUS       &trans
                    	                      &trans        &trans        &trans            &kp RET         &trans           &kp SE_N0 
                        >;
                };

                raise_layer {
                        bindings = <
   &trans       &kp SE_EXCL     &kp SE_AT     &kp SE_HASH   &kp SE_EURO        &kp SE_PRCNT      &trans          &trans          &trans             &trans         &trans             &trans
   &trans       &kp SE_AMPS     &kp SE_SLASH  &kp SE_LPAR   &kp SE_RPAR        &kp SE_EQUAL      &kp LEFT        &kp DOWN        &kp UP             &kp RIGHT      &trans             &trans
   &trans       &kp SE_QMARK    &kp SE_GRAVE  &kp SE_CARET  &kp KP_MULTIPLY    &kp SE_BSLH       &trans          &trans          &trans             &trans         &trans             &trans
				              &trans        &trans             &kp TAB           &trans          &trans          &trans
                        >;
                };

                misc_layer {
                        bindings = <
   &trans       &trans         &trans         &trans        &trans        &trans            &trans          &kp C_PP        &trans             &trans         &trans         &trans     
   &trans       &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5      &kp C_PREV      &kp C_VOL_DN    &kp C_VOL_UP       &kp C_NEXT     &trans         &trans     
   &sk LSHFT    &bt BT_CLR     &trans         &trans        &trans        &trans            &trans          &trans          &trans             &trans         &trans         &trans     
                    	                      &kp LGUI      &trans        &kp SPACE         &kp RET         &trans          &kp RALT
                        >;
                };
        };
};
