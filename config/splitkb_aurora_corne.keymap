/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "keys_se.h"
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SWERTY 1
#define LOWER 2
#define RAISE 3
#define MISC 4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER, RAISE>;
            then-layer = <MISC>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB        &kp SE_Q      &kp SE_W      &kp SE_E      &kp SE_R      &kp SE_T          &kp SE_Y        &kp SE_U         &kp SE_I          &kp SE_O        &kp SE_P         &kp BSPC
   &kp LCTRL      &kp SE_A      &kp SE_S      &kp SE_D      &kp SE_F      &kp SE_G          &kp SE_H        &kp SE_J         &kp SE_K          &kp SE_L        &kp SE_SEMI      &kp SE_SQT
   &sk LSHFT      &kp SE_Z      &kp SE_X      &kp SE_C      &kp SE_V      &kp SE_B          &kp SE_N        &kp SE_M         &kp SE_COMMA      &kp SE_DOT      &kp SE_FSLH      &kp ESC
                                              &kp LGUI      &mo LOWER     &kp BSPC          &kp SPACE       &mo RAISE        &kp RALT


                        >;
                };
                swerty_layer {
                        bindings = <
   &kp TAB        &trans        &trans        &trans        &trans        &trans            &trans          &trans           &trans            &trans          &trans           &kp SE_A_RING
   &trans         &trans        &trans        &trans        &trans        &trans            &trans          &trans           &trans            &trans          &kp SE_O_UMLAUT  &kp SE_A_UMLAUT
   &trans         &trans        &trans        &trans        &trans        &trans            &trans          &trans           &trans            &trans          &trans           &trans  
                                              &trans        &trans        &trans            &trans          &trans           &trans 


                        >;
                };
                lower_layer {
                        bindings = <
   &kp TAB      &kp SE_N1      &kp SE_N2      &kp SE_N3     &kp SE_N4     &kp SE_N5         &kp SE_N7       &kp SE_N8       &kp SE_N9          &kp SE_N9       &kp SE_N0        &kp BSPC
   &kp LCTRL    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp SE_N4       &kp SE_N5       &kp SE_N6          &kp RIGHT       &trans           &trans
   &sk LSHFT    &bt BT_CLR     &trans         &tog SWERTY   &trans        &trans            &kp SE_N1       &kp SE_N2       &kp SE_N3             &trans          &trans           &trans
                          	              &kp LGUI      &trans        &kp SPACE         &kp RET         &trans          &kp RALT
                        >;
                };

                raise_layer {
                        bindings = <
   &kp  tab     &kp se_excl    &kp se_at    &kp se_hash    &kp se_dllr    &kp se_prcnt      &kp se_caret    &kp se_amps     &kp kp_multiply    &kp se_lpar    &kp se_rpar    &kp bspc
   &kp lctrl    &trans         &trans       &trans         &trans         &trans            &kp se_minus    &kp se_equal    &kp se_lbkt        &kp se_rbkt    &kp se_bslh    &kp se_grave
   &sk lshft    &trans         &trans       &trans         &trans         &trans            &kp se_under    &kp se_plus     &kp se_lbrc        &kp se_rbrc    &kp se_pipe    &kp se_tilde
                    	                    &kp lgui       &trans         &kp space         &kp ret         &trans          &kp ralt
                        >;
                };
                misc_layer {
                        bindings = <
   &kp  tab     &kp se_excl    &kp se_at    &kp se_hash    &kp se_dllr    &kp se_prcnt      &kp se_caret    &kp se_amps     &kp kp_multiply    &kp se_lpar    &kp se_rpar    &kp bspc
   &kp lctrl    &trans         &trans       &trans         &trans         &trans            &kp se_minus    &kp C_VOL_UP    &kp se_lbkt        &kp se_rbkt    &kp se_bslh    &kp se_grave
   &sk lshft    &trans         &trans       &trans         &trans         &trans            &kp se_under    &kp se_plus     &kp se_lbrc        &kp se_rbrc    &kp se_pipe    &kp se_tilde
                    	                    &kp lgui       &trans         &kp space         &kp ret         &trans          &kp ralt
                        >;
                };
        };
};
